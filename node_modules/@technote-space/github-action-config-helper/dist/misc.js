"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseConfig = exports.parseJsonConfig = exports.parseYamlConfig = exports.isYaml = void 0;
const js_yaml_1 = __importDefault(require("js-yaml"));
const isYaml = (filename) => ['yaml', 'yml'].includes(String(filename.split('.').pop()));
exports.isYaml = isYaml;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const parseYamlConfig = (content) => {
    try {
        const config = js_yaml_1.default.safeLoad(content);
        if (!config || typeof config === 'string' || !Object.keys(config).length) {
            return {};
        }
        return config;
    }
    catch (error) {
        console.error(error);
        return {};
    }
};
exports.parseYamlConfig = parseYamlConfig;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const parseJsonConfig = (content) => {
    try {
        return JSON.parse(content);
    }
    catch (error) {
        console.error(error);
        return {};
    }
};
exports.parseJsonConfig = parseJsonConfig;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const parseConfig = (content, filename) => undefined === filename || exports.isYaml(filename) ?
    exports.parseYamlConfig(Buffer.from(content, 'base64').toString()) :
    exports.parseJsonConfig(Buffer.from(content, 'base64').toString());
exports.parseConfig = parseConfig;
